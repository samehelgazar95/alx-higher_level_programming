docTest for ``2-matrix_divided`` module
=======================================

Using ``matrix_divided()`` function
-----------------------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Declare the matrix:
------------------

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]

    >>> matrix2 = [
    ...     [1, "2", 3],
    ...     [4, 5, 6]
    ... ]

    >>> matrix3 = [
    ...     [2, 3],
    ...     [4, 5, 6]
    ... ]

Test Cases:
-----------

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, 1)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    >>> try:
    ...     matrix_divided(matrix, 0)
    ... except Exception as e:
    ...     print(e)
    division by zero

    >>> try:
    ...     matrix_divided(matrix, "3")
    ... except Exception as e:
    ...     print(e)
    div must be a number

    >>> try:
    ...     matrix_divided(matrix2, 3)
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats

    >>> try:
    ...     matrix_divided(matrix3, 3)
    ... except Exception as e:
    ...     print(e)
    Each row of the matrix must have the same size

    >>> matrix_divided(matrix3, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(matrix2, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(matrix3, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    
    >>> matrix_divided(matrix, '1')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
